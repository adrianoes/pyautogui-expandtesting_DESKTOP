name: Run PyAutoGUI Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt install -y xvfb x11-utils xdotool xauth ffmpeg imagemagick xfce4-terminal python3-tk  # Install tkinter
          python3 -m pip install --upgrade pip
          python3 -m pip install pytest pyautogui pyperclip Faker pytest-html  # Install all dependencies at once

      - name: Set up graphical environment
        run: |
          export DISPLAY=:99
          Xvfb :99 -screen 0 1920x1080x24 &  # Start Xvfb in the background
          sleep 2  # Wait for Xvfb to stabilize
          # Create and configure Xauthority manually
          touch ~/.Xauthority
          xauth generate :99 . trusted
          export XAUTHORITY=$HOME/.Xauthority

      - name: Create reports directory
        run: mkdir -p reports

      - name: Start screen recording
        run: |
          export DISPLAY=:99
          ffmpeg -y -f x11grab -video_size 1920x1080 -i :99 -r 25 -probesize 50M -analyzeduration 100M -pix_fmt yuv420p reports/test_recording.mp4 &  # Start screen capture
          echo $! > ffmpeg_pid.txt  # Save PID for later termination
        shell: /usr/bin/bash -e {0}

      - name: Capture initial screen
        run: |
          export DISPLAY=:99
          import -window root reports/before_test.png
        shell: /usr/bin/bash -e {0}

      - name: Run tests with PyAutoGUI
        run: |
          export DISPLAY=:99
          pytest ./tests -v --html=./reports/report.html --self-contained-html  # Run tests and generate HTML report
        shell: /usr/bin/bash -e {0}

      - name: Stop screen recording
        run: |
          if [ -f ffmpeg_pid.txt ]; then
            kill $(cat ffmpeg_pid.txt) || true  # Terminate ffmpeg process
          fi
        shell: /usr/bin/bash -e {0}

      - name: Upload test report
        uses: actions/upload-artifact@v4
        with:
          name: test-report
          path: reports/  # Upload generated reports (image and HTML)
